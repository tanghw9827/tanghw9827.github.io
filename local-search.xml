<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/08/02/%E6%9A%91%E6%9C%9F%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <url>/2024/08/02/%E6%9A%91%E6%9C%9F%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="2024-6-13"><a href="#2024-6-13" class="headerlink" title="2024&#x2F;6&#x2F;13"></a>2024&#x2F;6&#x2F;13</h3><h4 id="两数之和（注意区间，更新左右边界）"><a href="#两数之和（注意区间，更新左右边界）" class="headerlink" title="两数之和（注意区间，更新左右边界）"></a>两数之和（注意区间，更新左右边界）</h4><h4 id="移除元素（双迭代器，返回更新的迭代器）"><a href="#移除元素（双迭代器，返回更新的迭代器）" class="headerlink" title="移除元素（双迭代器，返回更新的迭代器）"></a>移除元素（双迭代器，返回更新的迭代器）</h4><h4 id="有序数组的平方（三个迭代器，两头往中间遍历）"><a href="#有序数组的平方（三个迭代器，两头往中间遍历）" class="headerlink" title="有序数组的平方（三个迭代器，两头往中间遍历）"></a>有序数组的平方（三个迭代器，两头往中间遍历）</h4><h4 id="长度最小的子数组（滑动窗口遍历，两个迭代器）"><a href="#长度最小的子数组（滑动窗口遍历，两个迭代器）" class="headerlink" title="长度最小的子数组（滑动窗口遍历，两个迭代器）"></a>长度最小的子数组（滑动窗口遍历，两个迭代器）</h4><h4 id="螺旋矩阵2（三个迭代器，按顺序遍历添加）"><a href="#螺旋矩阵2（三个迭代器，按顺序遍历添加）" class="headerlink" title="螺旋矩阵2（三个迭代器，按顺序遍历添加）"></a>螺旋矩阵2（三个迭代器，按顺序遍历添加）</h4><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="2024-6-15"><a href="#2024-6-15" class="headerlink" title="2024&#x2F;6&#x2F;15"></a>2024&#x2F;6&#x2F;15</h3><h4 id="移除链表元素（设置虚拟头节点，移动迭代器）"><a href="#移除链表元素（设置虚拟头节点，移动迭代器）" class="headerlink" title="移除链表元素（设置虚拟头节点，移动迭代器）"></a>移除链表元素（设置虚拟头节点，移动迭代器）</h4><h4 id="设计链表（设置虚拟头节点，节点数量私有变量）"><a href="#设计链表（设置虚拟头节点，节点数量私有变量）" class="headerlink" title="设计链表（设置虚拟头节点，节点数量私有变量）"></a>设计链表（设置虚拟头节点，节点数量私有变量）</h4><h4 id="反转链表（两个迭代器，一个临时量）"><a href="#反转链表（两个迭代器，一个临时量）" class="headerlink" title="反转链表（两个迭代器，一个临时量）"></a>反转链表（两个迭代器，一个临时量）</h4><h4 id="两两交换链表中的节点（一个迭代器，两个临时量）"><a href="#两两交换链表中的节点（一个迭代器，两个临时量）" class="headerlink" title="两两交换链表中的节点（一个迭代器，两个临时量）"></a>两两交换链表中的节点（一个迭代器，两个临时量）</h4><h4 id="删除链表的第n个元素（两个迭代器，注意边界条件）"><a href="#删除链表的第n个元素（两个迭代器，注意边界条件）" class="headerlink" title="删除链表的第n个元素（两个迭代器，注意边界条件）"></a>删除链表的第n个元素（两个迭代器，注意边界条件）</h4><h4 id="链表相交（计算两个链表的长度，遍历到相同位置，开始判断）"><a href="#链表相交（计算两个链表的长度，遍历到相同位置，开始判断）" class="headerlink" title="链表相交（计算两个链表的长度，遍历到相同位置，开始判断）"></a>链表相交（计算两个链表的长度，遍历到相同位置，开始判断）</h4><h4 id="环形链表2（快慢迭代器，当重合后，fast指针当前位置与head指针同时迭代，直到相等，返回相等值）"><a href="#环形链表2（快慢迭代器，当重合后，fast指针当前位置与head指针同时迭代，直到相等，返回相等值）" class="headerlink" title="环形链表2（快慢迭代器，当重合后，fast指针当前位置与head指针同时迭代，直到相等，返回相等值）"></a>环形链表2（快慢迭代器，当重合后，fast指针当前位置与head指针同时迭代，直到相等，返回相等值）</h4><h2 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h2><h3 id="2024-6-16"><a href="#2024-6-16" class="headerlink" title="2024&#x2F;6&#x2F;16"></a>2024&#x2F;6&#x2F;16</h3><h4 id="有效的字母异同位（使用哈希数组，一个字符串存，一个字符串取）"><a href="#有效的字母异同位（使用哈希数组，一个字符串存，一个字符串取）" class="headerlink" title="有效的字母异同位（使用哈希数组，一个字符串存，一个字符串取）"></a>有效的字母异同位（使用哈希数组，一个字符串存，一个字符串取）</h4><h4 id="两个数组的交集（使用哈希集合，find函数）"><a href="#两个数组的交集（使用哈希集合，find函数）" class="headerlink" title="两个数组的交集（使用哈希集合，find函数）"></a>两个数组的交集（使用哈希集合，find函数）</h4><h4 id="快乐数（使用哈希集合，如果一个数重复出现，则返回false）"><a href="#快乐数（使用哈希集合，如果一个数重复出现，则返回false）" class="headerlink" title="快乐数（使用哈希集合，如果一个数重复出现，则返回false）"></a>快乐数（使用哈希集合，如果一个数重复出现，则返回false）</h4><h4 id="两数之和（使用哈希表（值，值的序号），寻找目标减去当前值）"><a href="#两数之和（使用哈希表（值，值的序号），寻找目标减去当前值）" class="headerlink" title="两数之和（使用哈希表（值，值的序号），寻找目标减去当前值）"></a>两数之和（使用哈希表（值，值的序号），寻找目标减去当前值）</h4><h4 id="四数相加2（使用哈希表（值，值的数量），两个数为一组）"><a href="#四数相加2（使用哈希表（值，值的数量），两个数为一组）" class="headerlink" title="四数相加2（使用哈希表（值，值的数量），两个数为一组）"></a>四数相加2（使用哈希表（值，值的数量），两个数为一组）</h4><h4 id="赎金信（使用哈希数组，类似于第一题，注意大的在前面）"><a href="#赎金信（使用哈希数组，类似于第一题，注意大的在前面）" class="headerlink" title="赎金信（使用哈希数组，类似于第一题，注意大的在前面）"></a>赎金信（使用哈希数组，类似于第一题，注意大的在前面）</h4><h4 id="三数之和（使用三个迭代器，注意去重逻辑）"><a href="#三数之和（使用三个迭代器，注意去重逻辑）" class="headerlink" title="三数之和（使用三个迭代器，注意去重逻辑）"></a>三数之和（使用三个迭代器，注意去重逻辑）</h4><h4 id="四数之和（使用四个迭代器，注意去重逻辑，注意数组溢出，注意剪枝）"><a href="#四数之和（使用四个迭代器，注意去重逻辑，注意数组溢出，注意剪枝）" class="headerlink" title="四数之和（使用四个迭代器，注意去重逻辑，注意数组溢出，注意剪枝）"></a>四数之和（使用四个迭代器，注意去重逻辑，注意数组溢出，注意剪枝）</h4><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="2024-6-17"><a href="#2024-6-17" class="headerlink" title="2024&#x2F;6&#x2F;17"></a>2024&#x2F;6&#x2F;17</h3><h4 id="反转字符串（前后两个迭代器遍历交换）"><a href="#反转字符串（前后两个迭代器遍历交换）" class="headerlink" title="反转字符串（前后两个迭代器遍历交换）"></a>反转字符串（前后两个迭代器遍历交换）</h4><h4 id="反转字符串2（注意迭代器累加距离，分两种情况考虑）"><a href="#反转字符串2（注意迭代器累加距离，分两种情况考虑）" class="headerlink" title="反转字符串2（注意迭代器累加距离，分两种情况考虑）"></a>反转字符串2（注意迭代器累加距离，分两种情况考虑）</h4><h4 id="替换数字（使用erase和insert函数直接求解）"><a href="#替换数字（使用erase和insert函数直接求解）" class="headerlink" title="替换数字（使用erase和insert函数直接求解）"></a>替换数字（使用erase和insert函数直接求解）</h4><h4 id="反转字符串里面的单词（1-移除多余的空格；2-反转整个字符串；3-反转单词（注意反转条件））"><a href="#反转字符串里面的单词（1-移除多余的空格；2-反转整个字符串；3-反转单词（注意反转条件））" class="headerlink" title="反转字符串里面的单词（1.移除多余的空格；2.反转整个字符串；3.反转单词（注意反转条件））"></a>反转字符串里面的单词（1.移除多余的空格；2.反转整个字符串；3.反转单词（注意反转条件））</h4><h4 id="右旋转字符串（1-旋转整体；2-旋转局部（注意迭代器））"><a href="#右旋转字符串（1-旋转整体；2-旋转局部（注意迭代器））" class="headerlink" title="右旋转字符串（1.旋转整体；2.旋转局部（注意迭代器））"></a>右旋转字符串（1.旋转整体；2.旋转局部（注意迭代器））</h4><h4 id="实现strStr-（前缀表kmp算法）"><a href="#实现strStr-（前缀表kmp算法）" class="headerlink" title="实现strStr() （前缀表kmp算法）"></a>实现strStr() （前缀表kmp算法）</h4><h4 id="重复的子字符串-string-npos来表示未找到字符串，使用s-s-（使用前缀表）"><a href="#重复的子字符串-string-npos来表示未找到字符串，使用s-s-（使用前缀表）" class="headerlink" title="重复的子字符串 (string:npos来表示未找到字符串，使用s+s) （使用前缀表）"></a>重复的子字符串 (string:npos来表示未找到字符串，使用s+s) （使用前缀表）</h4><h2 id="栈与队列"><a href="#栈与队列" class="headerlink" title="栈与队列"></a>栈与队列</h2><h3 id="2024-6-21"><a href="#2024-6-21" class="headerlink" title="2024&#x2F;6&#x2F;21"></a>2024&#x2F;6&#x2F;21</h3><h4 id="用栈实现队列-输入输出两个栈"><a href="#用栈实现队列-输入输出两个栈" class="headerlink" title="用栈实现队列(输入输出两个栈)"></a>用栈实现队列(输入输出两个栈)</h4><h4 id="用队列实现栈-一个队列即可）"><a href="#用队列实现栈-一个队列即可）" class="headerlink" title="用队列实现栈(一个队列即可）"></a>用队列实现栈(一个队列即可）</h4><h4 id="有效的括号-使用栈，考虑三种情形，出现左入右"><a href="#有效的括号-使用栈，考虑三种情形，出现左入右" class="headerlink" title="有效的括号(使用栈，考虑三种情形，出现左入右)"></a>有效的括号(使用栈，考虑三种情形，出现左入右)</h4><h4 id="删除字符串中的所有相邻重复项（使用栈，注意反转结果）"><a href="#删除字符串中的所有相邻重复项（使用栈，注意反转结果）" class="headerlink" title="删除字符串中的所有相邻重复项（使用栈，注意反转结果）"></a>删除字符串中的所有相邻重复项（使用栈，注意反转结果）</h4><h4 id="逆波兰表达式求值-使用栈，注意计算时两个值的先后顺序）"><a href="#逆波兰表达式求值-使用栈，注意计算时两个值的先后顺序）" class="headerlink" title="逆波兰表达式求值(使用栈，注意计算时两个值的先后顺序）"></a>逆波兰表达式求值(使用栈，注意计算时两个值的先后顺序）</h4><h4 id="滑动窗口最大值（使用双端队列实现单调队列，两个for循环-）"><a href="#滑动窗口最大值（使用双端队列实现单调队列，两个for循环-）" class="headerlink" title="滑动窗口最大值（使用双端队列实现单调队列，两个for循环 ）"></a>滑动窗口最大值（使用双端队列实现单调队列，两个for循环 ）</h4><h4 id="前k个高频元素（使用优先队列构建小顶堆实现，通过哈希表记录频率-哈希表使用迭代器遍历）"><a href="#前k个高频元素（使用优先队列构建小顶堆实现，通过哈希表记录频率-哈希表使用迭代器遍历）" class="headerlink" title="前k个高频元素（使用优先队列构建小顶堆实现，通过哈希表记录频率,哈希表使用迭代器遍历）"></a>前k个高频元素（使用优先队列构建小顶堆实现，通过哈希表记录频率,哈希表使用迭代器遍历）</h4><h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><h3 id="2024-6-22"><a href="#2024-6-22" class="headerlink" title="2024&#x2F;6&#x2F;22"></a>2024&#x2F;6&#x2F;22</h3><h4 id="二叉树的递归遍历-使用递归函数，前中后序）"><a href="#二叉树的递归遍历-使用递归函数，前中后序）" class="headerlink" title="二叉树的递归遍历 (使用递归函数，前中后序）"></a>二叉树的递归遍历 (使用递归函数，前中后序）</h4><h4 id="二叉树的迭代遍历-使用栈-先进后出-，注意前序和中序不太一样，而后序是反转前序结果）"><a href="#二叉树的迭代遍历-使用栈-先进后出-，注意前序和中序不太一样，而后序是反转前序结果）" class="headerlink" title="二叉树的迭代遍历 (使用栈(先进后出)，注意前序和中序不太一样，而后序是反转前序结果）"></a>二叉树的迭代遍历 (使用栈(先进后出)，注意前序和中序不太一样，而后序是反转前序结果）</h4><h4 id="二叉树的统一迭代遍历-使用栈-先进后出-，在出处理节点后加一个空指针标记，遇到空指针回收结果，倒序加入栈）"><a href="#二叉树的统一迭代遍历-使用栈-先进后出-，在出处理节点后加一个空指针标记，遇到空指针回收结果，倒序加入栈）" class="headerlink" title="二叉树的统一迭代遍历 (使用栈(先进后出)，在出处理节点后加一个空指针标记，遇到空指针回收结果，倒序加入栈）"></a>二叉树的统一迭代遍历 (使用栈(先进后出)，在出处理节点后加一个空指针标记，遇到空指针回收结果，倒序加入栈）</h4><h4 id="二叉树的层序遍历（使用队列储存每一层的元素，并记录每一层的大小，push前注意检查为空）"><a href="#二叉树的层序遍历（使用队列储存每一层的元素，并记录每一层的大小，push前注意检查为空）" class="headerlink" title="二叉树的层序遍历（使用队列储存每一层的元素，并记录每一层的大小，push前注意检查为空）"></a>二叉树的层序遍历（使用队列储存每一层的元素，并记录每一层的大小，push前注意检查为空）</h4><h3 id="2024-6-25"><a href="#2024-6-25" class="headerlink" title="2024&#x2F;6&#x2F;25"></a>2024&#x2F;6&#x2F;25</h3><h4 id="翻转二叉树（递归、迭代、统一迭代、层序遍历）"><a href="#翻转二叉树（递归、迭代、统一迭代、层序遍历）" class="headerlink" title="翻转二叉树（递归、迭代、统一迭代、层序遍历）"></a>翻转二叉树（递归、迭代、统一迭代、层序遍历）</h4><h3 id="2024-6-27"><a href="#2024-6-27" class="headerlink" title="2024&#x2F;6&#x2F;27"></a>2024&#x2F;6&#x2F;27</h3><h4 id="N叉树的前序、后序遍历（递归）"><a href="#N叉树的前序、后序遍历（递归）" class="headerlink" title="N叉树的前序、后序遍历（递归）"></a>N叉树的前序、后序遍历（递归）</h4><h4 id="对称二叉树（递归）"><a href="#对称二叉树（递归）" class="headerlink" title="对称二叉树（递归）"></a>对称二叉树（递归）</h4><h4 id="二叉树的最大深度（递归）"><a href="#二叉树的最大深度（递归）" class="headerlink" title="二叉树的最大深度（递归）"></a>二叉树的最大深度（递归）</h4><h4 id="完全二叉树的节点个数（递归）"><a href="#完全二叉树的节点个数（递归）" class="headerlink" title="完全二叉树的节点个数（递归）"></a>完全二叉树的节点个数（递归）</h4><h4 id="平衡二叉树（递归）"><a href="#平衡二叉树（递归）" class="headerlink" title="平衡二叉树（递归）"></a>平衡二叉树（递归）</h4><h4 id="二叉树的所有路径（递归）"><a href="#二叉树的所有路径（递归）" class="headerlink" title="二叉树的所有路径（递归）"></a>二叉树的所有路径（递归）</h4><h4 id="相同的树（递归）"><a href="#相同的树（递归）" class="headerlink" title="相同的树（递归）"></a>相同的树（递归）</h4><h4 id="另一颗树的子树（递归）"><a href="#另一颗树的子树（递归）" class="headerlink" title="另一颗树的子树（递归）"></a>另一颗树的子树（递归）</h4><h4 id="左叶子之和（递归）"><a href="#左叶子之和（递归）" class="headerlink" title="左叶子之和（递归）"></a>左叶子之和（递归）</h4><h4 id="找左下角的值（迭代）"><a href="#找左下角的值（迭代）" class="headerlink" title="找左下角的值（迭代）"></a>找左下角的值（迭代）</h4><h4 id="路径总和（递归）"><a href="#路径总和（递归）" class="headerlink" title="路径总和（递归）"></a>路径总和（递归）</h4><h4 id="从中序与后序遍历序列构造二叉树（递归）"><a href="#从中序与后序遍历序列构造二叉树（递归）" class="headerlink" title="从中序与后序遍历序列构造二叉树（递归）"></a>从中序与后序遍历序列构造二叉树（递归）</h4><h4 id="最大二叉树（递归）"><a href="#最大二叉树（递归）" class="headerlink" title="最大二叉树（递归）"></a>最大二叉树（递归）</h4><h4 id="合并二叉树（递归）"><a href="#合并二叉树（递归）" class="headerlink" title="合并二叉树（递归）"></a>合并二叉树（递归）</h4><h4 id="二叉树中的搜索（递归、迭代）"><a href="#二叉树中的搜索（递归、迭代）" class="headerlink" title="二叉树中的搜索（递归、迭代）"></a>二叉树中的搜索（递归、迭代）</h4><h4 id="验证二叉搜索树（递归中序遍历搜集结果，判断是否为有序数组）"><a href="#验证二叉搜索树（递归中序遍历搜集结果，判断是否为有序数组）" class="headerlink" title="验证二叉搜索树（递归中序遍历搜集结果，判断是否为有序数组）"></a>验证二叉搜索树（递归中序遍历搜集结果，判断是否为有序数组）</h4><h4 id="二叉搜索树的最小绝对差（递归中序遍历）"><a href="#二叉搜索树的最小绝对差（递归中序遍历）" class="headerlink" title="二叉搜索树的最小绝对差（递归中序遍历）"></a>二叉搜索树的最小绝对差（递归中序遍历）</h4><h4 id="二叉搜索树的众数（递归中序遍历）"><a href="#二叉搜索树的众数（递归中序遍历）" class="headerlink" title="二叉搜索树的众数（递归中序遍历）"></a>二叉搜索树的众数（递归中序遍历）</h4><h4 id="二叉树的最近公共祖先（递归后序遍历）"><a href="#二叉树的最近公共祖先（递归后序遍历）" class="headerlink" title="二叉树的最近公共祖先（递归后序遍历）"></a>二叉树的最近公共祖先（递归后序遍历）</h4><h4 id="二叉搜索树的最近公共祖先（递归、迭代）"><a href="#二叉搜索树的最近公共祖先（递归、迭代）" class="headerlink" title="二叉搜索树的最近公共祖先（递归、迭代）"></a>二叉搜索树的最近公共祖先（递归、迭代）</h4><h4 id="二叉搜索树中的插入操作（递归、迭代）"><a href="#二叉搜索树中的插入操作（递归、迭代）" class="headerlink" title="二叉搜索树中的插入操作（递归、迭代）"></a>二叉搜索树中的插入操作（递归、迭代）</h4><h3 id="2024-6-30"><a href="#2024-6-30" class="headerlink" title="2024&#x2F;6&#x2F;30"></a>2024&#x2F;6&#x2F;30</h3><h4 id="删除二叉搜索树中的节点（递归）"><a href="#删除二叉搜索树中的节点（递归）" class="headerlink" title="删除二叉搜索树中的节点（递归）"></a>删除二叉搜索树中的节点（递归）</h4><h4 id="修剪二叉搜索树（递归）"><a href="#修剪二叉搜索树（递归）" class="headerlink" title="修剪二叉搜索树（递归）"></a>修剪二叉搜索树（递归）</h4><h4 id="将有序数组转换为二叉搜索树（递归）"><a href="#将有序数组转换为二叉搜索树（递归）" class="headerlink" title="将有序数组转换为二叉搜索树（递归）"></a>将有序数组转换为二叉搜索树（递归）</h4><h4 id="把二叉搜索树转换为累加树（递归）"><a href="#把二叉搜索树转换为累加树（递归）" class="headerlink" title="把二叉搜索树转换为累加树（递归）"></a>把二叉搜索树转换为累加树（递归）</h4><h3 id="2024-7-3"><a href="#2024-7-3" class="headerlink" title="2024&#x2F;7&#x2F;3"></a>2024&#x2F;7&#x2F;3</h3><h4 id="（1）二叉树的遍历方式（递归、迭代、统一迭代、层序遍历）"><a href="#（1）二叉树的遍历方式（递归、迭代、统一迭代、层序遍历）" class="headerlink" title="（1）二叉树的遍历方式（递归、迭代、统一迭代、层序遍历）"></a>（1）二叉树的遍历方式（递归、迭代、统一迭代、层序遍历）</h4><h4 id="（2）二叉树的属性（对称、深度、节点数、平衡、所有路径、左叶子之和、左下角的值、路径总和）"><a href="#（2）二叉树的属性（对称、深度、节点数、平衡、所有路径、左叶子之和、左下角的值、路径总和）" class="headerlink" title="（2）二叉树的属性（对称、深度、节点数、平衡、所有路径、左叶子之和、左下角的值、路径总和）"></a>（2）二叉树的属性（对称、深度、节点数、平衡、所有路径、左叶子之和、左下角的值、路径总和）</h4><h4 id="（3）二叉树的修改与构造（翻转、中后序构造、最大二叉树、合并二叉树、删除）"><a href="#（3）二叉树的修改与构造（翻转、中后序构造、最大二叉树、合并二叉树、删除）" class="headerlink" title="（3）二叉树的修改与构造（翻转、中后序构造、最大二叉树、合并二叉树、删除）"></a>（3）二叉树的修改与构造（翻转、中后序构造、最大二叉树、合并二叉树、删除）</h4><h4 id="（4）二叉搜索树的属性（搜索、验证、最小绝对差、众数、转换为累加树）"><a href="#（4）二叉搜索树的属性（搜索、验证、最小绝对差、众数、转换为累加树）" class="headerlink" title="（4）二叉搜索树的属性（搜索、验证、最小绝对差、众数、转换为累加树）"></a>（4）二叉搜索树的属性（搜索、验证、最小绝对差、众数、转换为累加树）</h4><h4 id="（5）二叉搜索树的修改与构造（插入、删除、修剪、构造）"><a href="#（5）二叉搜索树的修改与构造（插入、删除、修剪、构造）" class="headerlink" title="（5）二叉搜索树的修改与构造（插入、删除、修剪、构造）"></a>（5）二叉搜索树的修改与构造（插入、删除、修剪、构造）</h4><h4 id="（6）公共祖先问题（二叉树、二叉搜索树）"><a href="#（6）公共祖先问题（二叉树、二叉搜索树）" class="headerlink" title="（6）公共祖先问题（二叉树、二叉搜索树）"></a>（6）公共祖先问题（二叉树、二叉搜索树）</h4><h2 id="回溯算法"><a href="#回溯算法" class="headerlink" title="回溯算法"></a>回溯算法</h2><h3 id="2024-7-15"><a href="#2024-7-15" class="headerlink" title="2024&#x2F;7&#x2F;15"></a>2024&#x2F;7&#x2F;15</h3><h4 id="组合（回溯、剪枝）"><a href="#组合（回溯、剪枝）" class="headerlink" title="组合（回溯、剪枝）"></a>组合（回溯、剪枝）</h4><h4 id="组合总和III（回溯、剪枝）"><a href="#组合总和III（回溯、剪枝）" class="headerlink" title="组合总和III（回溯、剪枝）"></a>组合总和III（回溯、剪枝）</h4><h4 id="电话号码的字母组合（回溯）"><a href="#电话号码的字母组合（回溯）" class="headerlink" title="电话号码的字母组合（回溯）"></a>电话号码的字母组合（回溯）</h4><h4 id="组合总和（回溯、剪枝）"><a href="#组合总和（回溯、剪枝）" class="headerlink" title="组合总和（回溯、剪枝）"></a>组合总和（回溯、剪枝）</h4><h4 id="组合总和II（回溯、剪枝、排序去重）"><a href="#组合总和II（回溯、剪枝、排序去重）" class="headerlink" title="组合总和II（回溯、剪枝、排序去重）"></a>组合总和II（回溯、剪枝、排序去重）</h4><h4 id="分割字符串（回溯、两次收集）"><a href="#分割字符串（回溯、两次收集）" class="headerlink" title="分割字符串（回溯、两次收集）"></a>分割字符串（回溯、两次收集）</h4><h4 id="复原IP地址（回溯）"><a href="#复原IP地址（回溯）" class="headerlink" title="复原IP地址（回溯）"></a>复原IP地址（回溯）</h4><h4 id="子集（回溯、收集结果）"><a href="#子集（回溯、收集结果）" class="headerlink" title="子集（回溯、收集结果）"></a>子集（回溯、收集结果）</h4><h4 id="子集II（回溯、排序去重、收集结果）"><a href="#子集II（回溯、排序去重、收集结果）" class="headerlink" title="子集II（回溯、排序去重、收集结果）"></a>子集II（回溯、排序去重、收集结果）</h4><h4 id="递增子序列（回溯、无序图去重、收集结果）"><a href="#递增子序列（回溯、无序图去重、收集结果）" class="headerlink" title="递增子序列（回溯、无序图去重、收集结果）"></a>递增子序列（回溯、无序图去重、收集结果）</h4><h4 id="全排列（回溯、used数组标记、起始节点）"><a href="#全排列（回溯、used数组标记、起始节点）" class="headerlink" title="全排列（回溯、used数组标记、起始节点）"></a>全排列（回溯、used数组标记、起始节点）</h4><h4 id="全排列-II（回溯、used数组标记、起始节点、排列去重）"><a href="#全排列-II（回溯、used数组标记、起始节点、排列去重）" class="headerlink" title="全排列 II（回溯、used数组标记、起始节点、排列去重）"></a>全排列 II（回溯、used数组标记、起始节点、排列去重）</h4><h4 id="重新安排行程（回溯、map给行程排序、unordered-map记录行程、收集结果、返回值）"><a href="#重新安排行程（回溯、map给行程排序、unordered-map记录行程、收集结果、返回值）" class="headerlink" title="重新安排行程（回溯、map给行程排序、unordered_map记录行程、收集结果、返回值）"></a>重新安排行程（回溯、map给行程排序、unordered_map记录行程、收集结果、返回值）</h4><h4 id="N皇后（回溯、初始化、有效性检查）"><a href="#N皇后（回溯、初始化、有效性检查）" class="headerlink" title="N皇后（回溯、初始化、有效性检查）"></a>N皇后（回溯、初始化、有效性检查）</h4><h4 id="解数独（回溯、返回值、有效性检查、循环次数）"><a href="#解数独（回溯、返回值、有效性检查、循环次数）" class="headerlink" title="解数独（回溯、返回值、有效性检查、循环次数）"></a>解数独（回溯、返回值、有效性检查、循环次数）</h4><h2 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h2><h3 id="2024-7-20"><a href="#2024-7-20" class="headerlink" title="2024&#x2F;7&#x2F;20"></a>2024&#x2F;7&#x2F;20</h3><h4 id="分发饼干（贪心、排序）"><a href="#分发饼干（贪心、排序）" class="headerlink" title="分发饼干（贪心、排序）"></a>分发饼干（贪心、排序）</h4><h4 id="摆动序列（贪心、前后差值的更新）"><a href="#摆动序列（贪心、前后差值的更新）" class="headerlink" title="摆动序列（贪心、前后差值的更新）"></a>摆动序列（贪心、前后差值的更新）</h4><h4 id="最大子序和（贪心、重置起始位置）"><a href="#最大子序和（贪心、重置起始位置）" class="headerlink" title="最大子序和（贪心、重置起始位置）"></a>最大子序和（贪心、重置起始位置）</h4><h4 id="买卖股票的最佳时机-II（贪心、只收集正利润）"><a href="#买卖股票的最佳时机-II（贪心、只收集正利润）" class="headerlink" title="买卖股票的最佳时机 II（贪心、只收集正利润）"></a>买卖股票的最佳时机 II（贪心、只收集正利润）</h4><h4 id="跳跃游戏（贪心、维护最大到达位置）"><a href="#跳跃游戏（贪心、维护最大到达位置）" class="headerlink" title="跳跃游戏（贪心、维护最大到达位置）"></a>跳跃游戏（贪心、维护最大到达位置）</h4><h4 id="跳跃游戏-II（贪心、维护两个最大到达位置）"><a href="#跳跃游戏-II（贪心、维护两个最大到达位置）" class="headerlink" title="跳跃游戏 II（贪心、维护两个最大到达位置）"></a>跳跃游戏 II（贪心、维护两个最大到达位置）</h4><h4 id="加油站（贪心、重置起始位置）"><a href="#加油站（贪心、重置起始位置）" class="headerlink" title="加油站（贪心、重置起始位置）"></a>加油站（贪心、重置起始位置）</h4><h4 id="分发糖果（贪心、前后两次遍历）"><a href="#分发糖果（贪心、前后两次遍历）" class="headerlink" title="分发糖果（贪心、前后两次遍历）"></a>分发糖果（贪心、前后两次遍历）</h4><h4 id="柠檬水找零-贪心、一次遍历考虑各种情形）"><a href="#柠檬水找零-贪心、一次遍历考虑各种情形）" class="headerlink" title="柠檬水找零(贪心、一次遍历考虑各种情形）"></a>柠檬水找零(贪心、一次遍历考虑各种情形）</h4><h4 id="根据身高重建队列（贪心、比较函数、插入）"><a href="#根据身高重建队列（贪心、比较函数、插入）" class="headerlink" title="根据身高重建队列（贪心、比较函数、插入）"></a>根据身高重建队列（贪心、比较函数、插入）</h4><h4 id="用最少数量的箭引爆气球（贪心、比较函数、右边界更新）"><a href="#用最少数量的箭引爆气球（贪心、比较函数、右边界更新）" class="headerlink" title="用最少数量的箭引爆气球（贪心、比较函数、右边界更新）"></a>用最少数量的箭引爆气球（贪心、比较函数、右边界更新）</h4><h4 id="无重叠区间（贪心、比较函数、右边界更新）"><a href="#无重叠区间（贪心、比较函数、右边界更新）" class="headerlink" title="无重叠区间（贪心、比较函数、右边界更新）"></a>无重叠区间（贪心、比较函数、右边界更新）</h4><h4 id="划分字母区间（贪心、记录字符出现最远位置）"><a href="#划分字母区间（贪心、记录字符出现最远位置）" class="headerlink" title="划分字母区间（贪心、记录字符出现最远位置）"></a>划分字母区间（贪心、记录字符出现最远位置）</h4><h4 id="合并区间（贪心、比较函数、结果集右边界更新）"><a href="#合并区间（贪心、比较函数、结果集右边界更新）" class="headerlink" title="合并区间（贪心、比较函数、结果集右边界更新）"></a>合并区间（贪心、比较函数、结果集右边界更新）</h4><h4 id="单调递增的数字（贪心、初始化、记录左比右小的最新位置）"><a href="#单调递增的数字（贪心、初始化、记录左比右小的最新位置）" class="headerlink" title="单调递增的数字（贪心、初始化、记录左比右小的最新位置）"></a>单调递增的数字（贪心、初始化、记录左比右小的最新位置）</h4><h4 id="监控二叉树（贪心、二叉树遍历、状态转移）"><a href="#监控二叉树（贪心、二叉树遍历、状态转移）" class="headerlink" title="监控二叉树（贪心、二叉树遍历、状态转移）"></a>监控二叉树（贪心、二叉树遍历、状态转移）</h4><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><h3 id="2024-7-21"><a href="#2024-7-21" class="headerlink" title="2024&#x2F;7&#x2F;21"></a>2024&#x2F;7&#x2F;21</h3><h4 id="斐波那契数（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#斐波那契数（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="斐波那契数（dp数组含义、递推公式、初始条件、遍历顺序）"></a>斐波那契数（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="爬楼梯（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#爬楼梯（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="爬楼梯（dp数组含义、递推公式、初始条件、遍历顺序）"></a>爬楼梯（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="使用最小花费爬楼梯（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#使用最小花费爬楼梯（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="使用最小花费爬楼梯（dp数组含义、递推公式、初始条件、遍历顺序）"></a>使用最小花费爬楼梯（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="不同路径（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#不同路径（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="不同路径（dp数组含义、递推公式、初始条件、遍历顺序）"></a>不同路径（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="不同路径-II（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#不同路径-II（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="不同路径 II（dp数组含义、递推公式、初始条件、遍历顺序）"></a>不同路径 II（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="整数拆分（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#整数拆分（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="整数拆分（dp数组含义、递推公式、初始条件、遍历顺序）"></a>整数拆分（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="不同的二叉搜索树（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#不同的二叉搜索树（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="不同的二叉搜索树（dp数组含义、递推公式、初始条件、遍历顺序）"></a>不同的二叉搜索树（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="01背包理论基础（dp数组含义、递推公式、初始条件、逆序遍历顺序，背包最多能装多少物品）"><a href="#01背包理论基础（dp数组含义、递推公式、初始条件、逆序遍历顺序，背包最多能装多少物品）" class="headerlink" title="01背包理论基础（dp数组含义、递推公式、初始条件、逆序遍历顺序，背包最多能装多少物品）"></a>01背包理论基础（dp数组含义、递推公式、初始条件、逆序遍历顺序，背包最多能装多少物品）</h4><p>dp[i][j] &#x3D; max(dp[i-1][j],dp[i-1][j-weight[i]]+value[i])</p><h4 id="分割等和子集（dp数组含义、递推公式、初始条件、遍历顺序、背包能否被装满）"><a href="#分割等和子集（dp数组含义、递推公式、初始条件、遍历顺序、背包能否被装满）" class="headerlink" title="分割等和子集（dp数组含义、递推公式、初始条件、遍历顺序、背包能否被装满）"></a>分割等和子集（dp数组含义、递推公式、初始条件、遍历顺序、背包能否被装满）</h4><h4 id="最后一块石头的重量II（dp数组含义、递推公式、初始条件、遍历顺序、背包能否被装满）"><a href="#最后一块石头的重量II（dp数组含义、递推公式、初始条件、遍历顺序、背包能否被装满）" class="headerlink" title="最后一块石头的重量II（dp数组含义、递推公式、初始条件、遍历顺序、背包能否被装满）"></a>最后一块石头的重量II（dp数组含义、递推公式、初始条件、遍历顺序、背包能否被装满）</h4><p>dp[bag_space]&#x3D;&#x3D;bag_space;</p><h4 id="目标和（dp数组含义、递推公式、初始条件、遍历顺序、装满背包有几种方法）"><a href="#目标和（dp数组含义、递推公式、初始条件、遍历顺序、装满背包有几种方法）" class="headerlink" title="目标和（dp数组含义、递推公式、初始条件、遍历顺序、装满背包有几种方法）"></a>目标和（dp数组含义、递推公式、初始条件、遍历顺序、装满背包有几种方法）</h4><p>dp[j] +&#x3D; dp[j-nums[i]];dp[0]&#x3D;1</p><h4 id="一和零（二维dp数组含义、递推公式、初始条件、遍历顺序、背包最多能装多少物品）"><a href="#一和零（二维dp数组含义、递推公式、初始条件、遍历顺序、背包最多能装多少物品）" class="headerlink" title="一和零（二维dp数组含义、递推公式、初始条件、遍历顺序、背包最多能装多少物品）"></a>一和零（二维dp数组含义、递推公式、初始条件、遍历顺序、背包最多能装多少物品）</h4><h4 id="完全背包理论基础（dp数组含义、递推公式不一样、初始条件、遍历顺序，背包最多能装多少）"><a href="#完全背包理论基础（dp数组含义、递推公式不一样、初始条件、遍历顺序，背包最多能装多少）" class="headerlink" title="完全背包理论基础（dp数组含义、递推公式不一样、初始条件、遍历顺序，背包最多能装多少）"></a>完全背包理论基础（dp数组含义、递推公式不一样、初始条件、遍历顺序，背包最多能装多少）</h4><h4 id="零钱兑换II（dp数组含义、递推公式不一样、初始条件、组合遍历顺序，装满背包有几种方法）"><a href="#零钱兑换II（dp数组含义、递推公式不一样、初始条件、组合遍历顺序，装满背包有几种方法）" class="headerlink" title="零钱兑换II（dp数组含义、递推公式不一样、初始条件、组合遍历顺序，装满背包有几种方法）"></a>零钱兑换II（dp数组含义、递推公式不一样、初始条件、组合遍历顺序，装满背包有几种方法）</h4><h4 id="组合总和-Ⅳ（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包有几种方法）"><a href="#组合总和-Ⅳ（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包有几种方法）" class="headerlink" title="组合总和 Ⅳ（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包有几种方法）"></a>组合总和 Ⅳ（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包有几种方法）</h4><h4 id="爬楼梯（进阶版）（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包有几种方法）"><a href="#爬楼梯（进阶版）（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包有几种方法）" class="headerlink" title="爬楼梯（进阶版）（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包有几种方法）"></a>爬楼梯（进阶版）（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包有几种方法）</h4><p>背包从1开始计算</p><h4 id="零钱兑换（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包的最少物品）"><a href="#零钱兑换（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包的最少物品）" class="headerlink" title="零钱兑换（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包的最少物品）"></a>零钱兑换（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包的最少物品）</h4><p><strong>最少的硬币个数</strong> ：初始值不一样；递推公式不一样；递推条件不一样</p><h4 id="完全平方数（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包的最少物品）"><a href="#完全平方数（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包的最少物品）" class="headerlink" title="完全平方数（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包的最少物品）"></a>完全平方数（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，装满背包的最少物品）</h4><h4 id="单词拆分（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，背包能否被装满）"><a href="#单词拆分（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，背包能否被装满）" class="headerlink" title="单词拆分（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，背包能否被装满）"></a>单词拆分（dp数组含义、递推公式不一样、初始条件、排列遍历顺序，背包能否被装满）</h4><h4 id="多重背包理论基础（01问题基础上，多一层遍历顺序）"><a href="#多重背包理论基础（01问题基础上，多一层遍历顺序）" class="headerlink" title="多重背包理论基础（01问题基础上，多一层遍历顺序）"></a>多重背包理论基础（01问题基础上，多一层遍历顺序）</h4><p> dp[j] &#x3D; max(dp[j], dp[j - k * weight[i]] + k * value[i]);</p><h4 id="打家劫舍（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#打家劫舍（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="打家劫舍（dp数组含义、递推公式、初始条件、遍历顺序）"></a>打家劫舍（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="打家劫舍II（dp数组含义、递推公式、初始条件、遍历顺序、分为两个子问题）"><a href="#打家劫舍II（dp数组含义、递推公式、初始条件、遍历顺序、分为两个子问题）" class="headerlink" title="打家劫舍II（dp数组含义、递推公式、初始条件、遍历顺序、分为两个子问题）"></a>打家劫舍II（dp数组含义、递推公式、初始条件、遍历顺序、分为两个子问题）</h4><h4 id="打家劫舍-III（树形dp）"><a href="#打家劫舍-III（树形dp）" class="headerlink" title="打家劫舍 III（树形dp）"></a>打家劫舍 III（树形dp）</h4><h4 id="买卖股票的最佳时机（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#买卖股票的最佳时机（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="买卖股票的最佳时机（dp数组含义、递推公式、初始条件、遍历顺序）"></a>买卖股票的最佳时机（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h3 id="2024-7-22"><a href="#2024-7-22" class="headerlink" title="2024&#x2F;7&#x2F;22"></a>2024&#x2F;7&#x2F;22</h3><h4 id="买卖股票的最佳时机II（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#买卖股票的最佳时机II（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="买卖股票的最佳时机II（dp数组含义、递推公式、初始条件、遍历顺序）"></a>买卖股票的最佳时机II（dp数组含义、递推公式、初始条件、遍历顺序）</h4><p>与（1）不同在于可以交易多次<br>dp[i][0] &#x3D; max(dp[i-1][0],-prices[i]);<br>dp[i][0] &#x3D; max(dp[i-1][0],dp[i-1][1]-prices[i]);</p><h4 id="买卖股票的最佳时机III（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#买卖股票的最佳时机III（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="买卖股票的最佳时机III（dp数组含义、递推公式、初始条件、遍历顺序）"></a>买卖股票的最佳时机III（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="买卖股票的最佳时机IV（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#买卖股票的最佳时机IV（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="买卖股票的最佳时机IV（dp数组含义、递推公式、初始条件、遍历顺序）"></a>买卖股票的最佳时机IV（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="最佳买卖股票时机含冷冻期（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#最佳买卖股票时机含冷冻期（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="最佳买卖股票时机含冷冻期（dp数组含义、递推公式、初始条件、遍历顺序）"></a>最佳买卖股票时机含冷冻期（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="买卖股票的最佳时机含手续费（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#买卖股票的最佳时机含手续费（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="买卖股票的最佳时机含手续费（dp数组含义、递推公式、初始条件、遍历顺序）"></a>买卖股票的最佳时机含手续费（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="最长递增子序列（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#最长递增子序列（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="最长递增子序列（dp数组含义、递推公式、初始条件、遍历顺序）"></a>最长递增子序列（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="最长连续递增序列（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#最长连续递增序列（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="最长连续递增序列（dp数组含义、递推公式、初始条件、遍历顺序）"></a>最长连续递增序列（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="最长重复子数组（dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#最长重复子数组（dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="最长重复子数组（dp数组含义、递推公式、初始条件、遍历顺序）"></a>最长重复子数组（dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="最长公共子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#最长公共子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="最长公共子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>最长公共子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="不相交的线（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#不相交的线（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="不相交的线（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>不相交的线（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="最大子序和（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#最大子序和（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="最大子序和（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>最大子序和（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="判断子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#判断子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="判断子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>判断子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="不同的子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#不同的子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="不同的子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>不同的子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="两个字符串的删除操作（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#两个字符串的删除操作（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="两个字符串的删除操作（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>两个字符串的删除操作（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="编辑距离（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#编辑距离（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="编辑距离（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>编辑距离（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="回文子串（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#回文子串（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="回文子串（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>回文子串（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="最长回文子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"><a href="#最长回文子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）" class="headerlink" title="最长回文子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>最长回文子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h4 id="最长回文子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）-1"><a href="#最长回文子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）-1" class="headerlink" title="最长回文子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）"></a>最长回文子序列（二维dp数组含义、递推公式、初始条件、遍历顺序）</h4><h2 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a>单调栈</h2><h3 id="2024-7-23"><a href="#2024-7-23" class="headerlink" title="2024&#x2F;7&#x2F;23"></a>2024&#x2F;7&#x2F;23</h3><h4 id="每日温度"><a href="#每日温度" class="headerlink" title="每日温度"></a>每日温度</h4><h4 id="下一个更大元素-I"><a href="#下一个更大元素-I" class="headerlink" title="下一个更大元素 I"></a>下一个更大元素 I</h4><h4 id="下一个更大元素II"><a href="#下一个更大元素II" class="headerlink" title="下一个更大元素II"></a>下一个更大元素II</h4><h4 id="接雨水"><a href="#接雨水" class="headerlink" title="接雨水"></a>接雨水</h4><h4 id="柱状图中最大的矩形"><a href="#柱状图中最大的矩形" class="headerlink" title="柱状图中最大的矩形"></a>柱状图中最大的矩形</h4><h2 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h2><h4 id="所有可能的路径"><a href="#所有可能的路径" class="headerlink" title="所有可能的路径"></a>所有可能的路径</h4><h4 id="岛屿数量"><a href="#岛屿数量" class="headerlink" title="岛屿数量"></a>岛屿数量</h4><h4 id="岛屿的最大面积"><a href="#岛屿的最大面积" class="headerlink" title="岛屿的最大面积"></a>岛屿的最大面积</h4><h4 id="孤岛的总面积（先把陆地的岛屿遍历完，再清空计数）"><a href="#孤岛的总面积（先把陆地的岛屿遍历完，再清空计数）" class="headerlink" title="孤岛的总面积（先把陆地的岛屿遍历完，再清空计数）"></a>孤岛的总面积（先把陆地的岛屿遍历完，再清空计数）</h4><h4 id="沉没孤岛（先把陆地的岛屿遍历完做特殊标记，再遍历孤岛赋值）"><a href="#沉没孤岛（先把陆地的岛屿遍历完做特殊标记，再遍历孤岛赋值）" class="headerlink" title="沉没孤岛（先把陆地的岛屿遍历完做特殊标记，再遍历孤岛赋值）"></a>沉没孤岛（先把陆地的岛屿遍历完做特殊标记，再遍历孤岛赋值）</h4><h4 id="水流问题（两个边界出发，遍历都经过的为目标节点）"><a href="#水流问题（两个边界出发，遍历都经过的为目标节点）" class="headerlink" title="水流问题（两个边界出发，遍历都经过的为目标节点）"></a>水流问题（两个边界出发，遍历都经过的为目标节点）</h4><h4 id="建造最大岛屿（使用umap记录岛屿及其面积，遍历海水区域，四个方向累加，取最大值）"><a href="#建造最大岛屿（使用umap记录岛屿及其面积，遍历海水区域，四个方向累加，取最大值）" class="headerlink" title="建造最大岛屿（使用umap记录岛屿及其面积，遍历海水区域，四个方向累加，取最大值）"></a>建造最大岛屿（使用umap记录岛屿及其面积，遍历海水区域，四个方向累加，取最大值）</h4><h4 id="字符串接龙"><a href="#字符串接龙" class="headerlink" title="字符串接龙"></a>字符串接龙</h4><h4 id="有向图的完全可达性"><a href="#有向图的完全可达性" class="headerlink" title="有向图的完全可达性"></a>有向图的完全可达性</h4><h4 id="岛屿的周长（水域或者在边界上）"><a href="#岛屿的周长（水域或者在边界上）" class="headerlink" title="岛屿的周长（水域或者在边界上）"></a>岛屿的周长（水域或者在边界上）</h4><h4 id="寻找存在的路径（并查集）"><a href="#寻找存在的路径（并查集）" class="headerlink" title="寻找存在的路径（并查集）"></a>寻找存在的路径（并查集）</h4><h4 id="冗余连接"><a href="#冗余连接" class="headerlink" title="冗余连接"></a>冗余连接</h4><h4 id="最小生成树（prim、Kruskal"><a href="#最小生成树（prim、Kruskal" class="headerlink" title="最小生成树（prim、Kruskal)"></a>最小生成树（prim、Kruskal)</h4><h4 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h4><h4 id="dijkstra（朴素版）精讲"><a href="#dijkstra（朴素版）精讲" class="headerlink" title="dijkstra（朴素版）精讲"></a>dijkstra（朴素版）精讲</h4><h4 id="dijkstra（堆优化版）精讲"><a href="#dijkstra（堆优化版）精讲" class="headerlink" title="dijkstra（堆优化版）精讲"></a>dijkstra（堆优化版）精讲</h4><h4 id="bellman-ford算法"><a href="#bellman-ford算法" class="headerlink" title="bellman_ford算法"></a>bellman_ford算法</h4><h4 id="Floyd-算法（多源最短路问题）"><a href="#Floyd-算法（多源最短路问题）" class="headerlink" title="Floyd 算法（多源最短路问题）"></a>Floyd 算法（多源最短路问题）</h4>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>底盘驱动基本原理</title>
    <link href="/2024/08/01/%E5%BA%95%E7%9B%98%E9%A9%B1%E5%8A%A8%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/"/>
    <url>/2024/08/01/%E5%BA%95%E7%9B%98%E9%A9%B1%E5%8A%A8%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;在本篇文章中，我们将介绍控制基本原理，包括如何创建新的文章、启动服务器、生成静态文件以及部署到远程站点的方法。最后对markdown语法怎么插入图片视频目录进行了说明。</p><span id="more"></span><h2 id="1-Markdown-com-cn-简介"><a href="#1-Markdown-com-cn-简介" class="headerlink" title="1 Markdown.com.cn 简介"></a>1 Markdown.com.cn 简介</h2><ul><li>支持自定义样式的 Markdown 编辑器</li><li>支持微信公众号、知乎和稀土掘金</li><li>点击右上方对应图标，一键复制到各平台</li></ul><h2 id="2-Markdown语法教程"><a href="#2-Markdown语法教程" class="headerlink" title="2 Markdown语法教程"></a>2 Markdown语法教程</h2><h3 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h3><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h3 id="2-2-字体"><a href="#2-2-字体" class="headerlink" title="2.2 字体"></a>2.2 字体</h3><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p><p><strong>这个是粗体</strong></p><p><em>这个是斜体</em></p><p><em><strong>这个是粗体加斜体</strong></em></p><p>~这里想用删除线~~</p><p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p><h3 id="2-3-无序列表"><a href="#2-3-无序列表" class="headerlink" title="2.3 无序列表"></a>2.3 无序列表</h3><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3</li></ul><p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p><ul><li>无序列表 1</li><li>无序列表 2<ul><li>无序列表 2.1</li><li>无序列表 2.2</li></ul></li></ul><p><strong>由于微信原因，最多支持到二级列表</strong>。</p><h3 id="2-4-有序列表"><a href="#2-4-有序列表" class="headerlink" title="2.4 有序列表"></a>2.4 有序列表</h3><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><h3 id="2-5-引用"><a href="#2-5-引用" class="headerlink" title="2.5 引用"></a>2.5 引用</h3><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p><blockquote><p>读一本好书，就是在和高尚的人谈话。 ——歌德</p></blockquote><blockquote><p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p></blockquote><h3 id="2-7-链接"><a href="#2-7-链接" class="headerlink" title="2.7 链接"></a>2.7 链接</h3><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p><p>对于该论述，欢迎读者查阅之前发过的文章，<a href="https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA">你是《未来世界的幸存者》么？</a><br><a id="jump_8"></a></p><h3 id="2-8-图片"><a href="#2-8-图片" class="headerlink" title="2.8 图片"></a>2.8 图片</h3><p>插入图片，格式如下：</p><p><img src="/../images/default.png" alt="图片"></p><p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p><p><img src="https://markdown.com.cn/images/i-am-svg.svg"></p><p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p><p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p><h3 id="2-9-分割线"><a href="#2-9-分割线" class="headerlink" title="2.9 分割线"></a>2.9 分割线</h3><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p><hr><h3 id="2-10-表格"><a href="#2-10-表格" class="headerlink" title="2.10 表格"></a>2.10 表格</h3><p>可以使用冒号来定义表格的对齐方式，如下：</p><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th></tr></thead><tbody><tr><td align="left">小可爱</td><td align="center">18</td><td align="right">吃可爱多</td></tr><tr><td align="left">小小勇敢</td><td align="center">20</td><td align="right">爬棵勇敢树</td></tr><tr><td align="left">小小小机智</td><td align="center">22</td><td align="right">看一本机智书</td></tr></tbody></table><h2 id="3-特殊语法"><a href="#3-特殊语法" class="headerlink" title="3. 特殊语法"></a>3. 特殊语法</h2><h3 id="3-1-脚注"><a href="#3-1-脚注" class="headerlink" title="3.1 脚注"></a>3.1 脚注</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>脚注与链接的区别如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">链接：[<span class="hljs-string">文字</span>](<span class="hljs-link">链接</span>)<br>脚注：[<span class="hljs-string">文字</span>](<span class="hljs-link">脚注解释 &quot;脚注名字&quot;</span>)<br></code></pre></td></tr></table></figure><p>有人认为在<a href="https://en.wikipedia.org/wiki/Front-end_web_development" title="Front-end web development">大前端时代</a>的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。</p><p><a href="%E6%98%AF%E6%8C%87%E6%8E%8C%E6%8F%A1%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%88%A9%E7%94%A8%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%E7%8B%AC%E7%AB%8B%E5%AE%8C%E6%88%90%E4%BA%A7%E5%93%81%E7%9A%84%E4%BA%BA%E3%80%82" title="什么是全栈工程师">全栈工程师</a>在业务开发流程中起到了至关重要的作用。</p><p>脚注内容请拉到最下面观看。</p><h3 id="3-2-代码块"><a href="#3-2-代码块" class="headerlink" title="3.2 代码块"></a>3.2 代码块</h3><blockquote><p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p></blockquote><p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p><p>Use the <code>printf()</code> function.</p><p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// FileName: HelloWorld.java</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloWorld</span> &#123;<br>  <span class="hljs-comment">// Java 入口程序，程序从此入口</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;Hello,World!&quot;</span>); <span class="hljs-comment">// 向控制台打印一条语句</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>支持以下语言种类：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vim">bash<br>clojure，cpp，<span class="hljs-keyword">cs</span>，css<br>dart，dockerfile, diff<br>erlang<br><span class="hljs-keyword">go</span>，gradle，groovy<br>haskell<br>java，javascript，json，julia<br>kotlin<br>lisp，<span class="hljs-keyword">lua</span><br>makefile，markdown，matlab<br>objectivec<br><span class="hljs-keyword">perl</span>，php，<span class="hljs-keyword">python</span><br>r，<span class="hljs-keyword">ruby</span>，rust<br>scala，<span class="hljs-keyword">shell</span>，sql，swift<br>tex，typescript<br>verilog，vhdl<br>xml<br>yaml<br></code></pre></td></tr></table></figure><p>如果想要更换代码高亮样式，可在上方<strong>代码主题</strong>中挑选。</p><p>其中<strong>微信代码主题与微信官方一致</strong>，有以下注意事项：</p><ul><li>带行号且不换行，代码大小与官方一致</li><li>需要在代码块处标志语言，否则无法高亮</li><li>粘贴到公众号后，用鼠标点代码块内外一次，完成高亮</li></ul><p>diff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-addition">+ 新增项</span><br><span class="hljs-deletion">- 删除项</span><br></code></pre></td></tr></table></figure><p><strong>其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致</strong></p><h3 id="3-3-数学公式"><a href="#3-3-数学公式" class="headerlink" title="3.3 数学公式"></a>3.3 数学公式</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>行内公式使用方法，比如这个化学公式：$\ce{Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^{II}I4]^2-}$</p><p>块公式使用方法如下：</p><p>$$H(D_2) &#x3D; -\left(\frac{2}{4}\log_2 \frac{2}{4} + \frac{2}{4}\log_2 \frac{2}{4}\right) &#x3D; 1$$</p><p>矩阵：</p><p>$$<br>  \begin{pmatrix}<br>  1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>  1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>  \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>  1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>  \end{pmatrix}<br>$$</p><p>公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。</p><p>目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。</p><h3 id="3-4-TOC"><a href="#3-4-TOC" class="headerlink" title="3.4 TOC"></a>3.4 TOC</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>TOC 全称为 Table of Content，列出全部标题。</p><p>[TOC]</p><p>由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。</p><h3 id="3-5-注音符号"><a href="#3-5-注音符号" class="headerlink" title="3.5 注音符号"></a>3.5 注音符号</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>支持注音符号，用法如下：</p><p>Markdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！</p><h3 id="3-6-横屏滑动幻灯片"><a href="#3-6-横屏滑动幻灯片" class="headerlink" title="3.6 横屏滑动幻灯片"></a>3.6 横屏滑动幻灯片</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>通过<code>&lt;![](url),![](url)&gt;</code>这种语法设置横屏滑动滑动片，具体用法如下：</p><p>&lt;<img src="https://markdown.com.cn/images/blue.jpg" alt="蓝1">,<img src="https://markdown.com.cn/images/green.jpg" alt="绿2"></p><h2 id="4-其他语法"><a href="#4-其他语法" class="headerlink" title="4 其他语法"></a>4 其他语法</h2><h3 id="4-1-HTML"><a href="#4-1-HTML" class="headerlink" title="4.1 HTML"></a>4.1 HTML</h3><p>支持原生 HTML 语法，请写内联样式，如下：</p><p><span style="display:block;text-align:right;color:orangered;">橙色居右</span><br><span style="display:block;text-align:center;color:orangered;">橙色居中</span></p><h3 id="4-2-UML"><a href="#4-2-UML" class="headerlink" title="4.2 UML"></a>4.2 UML</h3><p>不支持，推荐使用开源工具<code>https://draw.io/</code>制作后再导入图片</p><h2 id="5-致谢"><a href="#5-致谢" class="headerlink" title="5 致谢"></a>5 致谢</h2><ul><li>歌词经理 <a href="https://github.com/lyricat/wechat-format" title="灵感来源">wechat-fromat</a></li><li>颜家大少 <a href="http://md.aclickall.com/" title="MdA2All">MD2All</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>控制算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>控制基本原理</title>
    <link href="/2024/08/01/%E6%8E%A7%E5%88%B6%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/"/>
    <url>/2024/08/01/%E6%8E%A7%E5%88%B6%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;在本篇文章中，我们将介绍控制基本原理，包括如何创建新的文章、启动服务器、生成静态文件以及部署到远程站点的方法。最后对markdown语法怎么插入图片视频目录进行了说明。</p><span id="more"></span><h2 id="1-Markdown-com-cn-简介"><a href="#1-Markdown-com-cn-简介" class="headerlink" title="1 Markdown.com.cn 简介"></a>1 Markdown.com.cn 简介</h2><ul><li>支持自定义样式的 Markdown 编辑器</li><li>支持微信公众号、知乎和稀土掘金</li><li>点击右上方对应图标，一键复制到各平台</li></ul><h2 id="2-Markdown语法教程"><a href="#2-Markdown语法教程" class="headerlink" title="2 Markdown语法教程"></a>2 Markdown语法教程</h2><h3 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h3><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h3 id="2-2-字体"><a href="#2-2-字体" class="headerlink" title="2.2 字体"></a>2.2 字体</h3><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p><p><strong>这个是粗体</strong></p><p><em>这个是斜体</em></p><p><em><strong>这个是粗体加斜体</strong></em></p><p>~这里想用删除线~~</p><p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p><h3 id="2-3-无序列表"><a href="#2-3-无序列表" class="headerlink" title="2.3 无序列表"></a>2.3 无序列表</h3><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3</li></ul><p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p><ul><li>无序列表 1</li><li>无序列表 2<ul><li>无序列表 2.1</li><li>无序列表 2.2</li></ul></li></ul><p><strong>由于微信原因，最多支持到二级列表</strong>。</p><h3 id="2-4-有序列表"><a href="#2-4-有序列表" class="headerlink" title="2.4 有序列表"></a>2.4 有序列表</h3><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><h3 id="2-5-引用"><a href="#2-5-引用" class="headerlink" title="2.5 引用"></a>2.5 引用</h3><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p><blockquote><p>读一本好书，就是在和高尚的人谈话。 ——歌德</p></blockquote><blockquote><p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p></blockquote><h3 id="2-7-链接"><a href="#2-7-链接" class="headerlink" title="2.7 链接"></a>2.7 链接</h3><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p><p>对于该论述，欢迎读者查阅之前发过的文章，<a href="https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA">你是《未来世界的幸存者》么？</a><br><a id="jump_8"></a></p><h3 id="2-8-图片"><a href="#2-8-图片" class="headerlink" title="2.8 图片"></a>2.8 图片</h3><p>插入图片，格式如下：</p><p><img src="/../images/default.png" alt="图片"></p><p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p><p><img src="https://markdown.com.cn/images/i-am-svg.svg"></p><p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p><p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p><h3 id="2-9-分割线"><a href="#2-9-分割线" class="headerlink" title="2.9 分割线"></a>2.9 分割线</h3><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p><hr><h3 id="2-10-表格"><a href="#2-10-表格" class="headerlink" title="2.10 表格"></a>2.10 表格</h3><p>可以使用冒号来定义表格的对齐方式，如下：</p><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th></tr></thead><tbody><tr><td align="left">小可爱</td><td align="center">18</td><td align="right">吃可爱多</td></tr><tr><td align="left">小小勇敢</td><td align="center">20</td><td align="right">爬棵勇敢树</td></tr><tr><td align="left">小小小机智</td><td align="center">22</td><td align="right">看一本机智书</td></tr></tbody></table><h2 id="3-特殊语法"><a href="#3-特殊语法" class="headerlink" title="3. 特殊语法"></a>3. 特殊语法</h2><h3 id="3-1-脚注"><a href="#3-1-脚注" class="headerlink" title="3.1 脚注"></a>3.1 脚注</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>脚注与链接的区别如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">链接：[<span class="hljs-string">文字</span>](<span class="hljs-link">链接</span>)<br>脚注：[<span class="hljs-string">文字</span>](<span class="hljs-link">脚注解释 &quot;脚注名字&quot;</span>)<br></code></pre></td></tr></table></figure><p>有人认为在<a href="https://en.wikipedia.org/wiki/Front-end_web_development" title="Front-end web development">大前端时代</a>的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。</p><p><a href="%E6%98%AF%E6%8C%87%E6%8E%8C%E6%8F%A1%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%88%A9%E7%94%A8%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%E7%8B%AC%E7%AB%8B%E5%AE%8C%E6%88%90%E4%BA%A7%E5%93%81%E7%9A%84%E4%BA%BA%E3%80%82" title="什么是全栈工程师">全栈工程师</a>在业务开发流程中起到了至关重要的作用。</p><p>脚注内容请拉到最下面观看。</p><h3 id="3-2-代码块"><a href="#3-2-代码块" class="headerlink" title="3.2 代码块"></a>3.2 代码块</h3><blockquote><p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p></blockquote><p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p><p>Use the <code>printf()</code> function.</p><p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// FileName: HelloWorld.java</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloWorld</span> &#123;<br>  <span class="hljs-comment">// Java 入口程序，程序从此入口</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;Hello,World!&quot;</span>); <span class="hljs-comment">// 向控制台打印一条语句</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>支持以下语言种类：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vim">bash<br>clojure，cpp，<span class="hljs-keyword">cs</span>，css<br>dart，dockerfile, diff<br>erlang<br><span class="hljs-keyword">go</span>，gradle，groovy<br>haskell<br>java，javascript，json，julia<br>kotlin<br>lisp，<span class="hljs-keyword">lua</span><br>makefile，markdown，matlab<br>objectivec<br><span class="hljs-keyword">perl</span>，php，<span class="hljs-keyword">python</span><br>r，<span class="hljs-keyword">ruby</span>，rust<br>scala，<span class="hljs-keyword">shell</span>，sql，swift<br>tex，typescript<br>verilog，vhdl<br>xml<br>yaml<br></code></pre></td></tr></table></figure><p>如果想要更换代码高亮样式，可在上方<strong>代码主题</strong>中挑选。</p><p>其中<strong>微信代码主题与微信官方一致</strong>，有以下注意事项：</p><ul><li>带行号且不换行，代码大小与官方一致</li><li>需要在代码块处标志语言，否则无法高亮</li><li>粘贴到公众号后，用鼠标点代码块内外一次，完成高亮</li></ul><p>diff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-addition">+ 新增项</span><br><span class="hljs-deletion">- 删除项</span><br></code></pre></td></tr></table></figure><p><strong>其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致</strong></p><h3 id="3-3-数学公式"><a href="#3-3-数学公式" class="headerlink" title="3.3 数学公式"></a>3.3 数学公式</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>行内公式使用方法，比如这个化学公式：$\ce{Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^{II}I4]^2-}$</p><p>块公式使用方法如下：</p><p>$$H(D_2) &#x3D; -\left(\frac{2}{4}\log_2 \frac{2}{4} + \frac{2}{4}\log_2 \frac{2}{4}\right) &#x3D; 1$$</p><p>矩阵：</p><p>$$<br>  \begin{pmatrix}<br>  1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>  1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>  \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>  1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>  \end{pmatrix}<br>$$</p><p>公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。</p><p>目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。</p><h3 id="3-4-TOC"><a href="#3-4-TOC" class="headerlink" title="3.4 TOC"></a>3.4 TOC</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>TOC 全称为 Table of Content，列出全部标题。</p><p>[TOC]</p><p>由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。</p><h3 id="3-5-注音符号"><a href="#3-5-注音符号" class="headerlink" title="3.5 注音符号"></a>3.5 注音符号</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>支持注音符号，用法如下：</p><p>Markdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！</p><h3 id="3-6-横屏滑动幻灯片"><a href="#3-6-横屏滑动幻灯片" class="headerlink" title="3.6 横屏滑动幻灯片"></a>3.6 横屏滑动幻灯片</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>通过<code>&lt;![](url),![](url)&gt;</code>这种语法设置横屏滑动滑动片，具体用法如下：</p><p>&lt;<img src="https://markdown.com.cn/images/blue.jpg" alt="蓝1">,<img src="https://markdown.com.cn/images/green.jpg" alt="绿2"></p><h2 id="4-其他语法"><a href="#4-其他语法" class="headerlink" title="4 其他语法"></a>4 其他语法</h2><h3 id="4-1-HTML"><a href="#4-1-HTML" class="headerlink" title="4.1 HTML"></a>4.1 HTML</h3><p>支持原生 HTML 语法，请写内联样式，如下：</p><p><span style="display:block;text-align:right;color:orangered;">橙色居右</span><br><span style="display:block;text-align:center;color:orangered;">橙色居中</span></p><h3 id="4-2-UML"><a href="#4-2-UML" class="headerlink" title="4.2 UML"></a>4.2 UML</h3><p>不支持，推荐使用开源工具<code>https://draw.io/</code>制作后再导入图片</p><h2 id="5-致谢"><a href="#5-致谢" class="headerlink" title="5 致谢"></a>5 致谢</h2><ul><li>歌词经理 <a href="https://github.com/lyricat/wechat-format" title="灵感来源">wechat-fromat</a></li><li>颜家大少 <a href="http://md.aclickall.com/" title="MdA2All">MD2All</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>控制算法</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
